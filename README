jFileFuzz is a very simple (and maybe useless) file fuzzer.

Main features:

Different method of fuzz
Test and log the activity of the attacked software with the fuzzed files
Multiplatform

This is the help.. Readme ftw!

Utility switch:

--print  _int   	Print file in HEX format with specified column number.
--size   _bool  	If set print the size of file.

Essential fuzzing switch:

--file   _String	Set the file you want to fuzz.
--rofuzz _String	Overwrite data at random position.
--rifuzz _String	Insert data at random position.
--ifuzz  _String	Insert data from "start" to "end" .
--ofuzz  _String	Overwrite data from "start" to "end".
--refuzz _String	Replace selected data with custom data.

Essential switch for random fuzz:

--n      _int   	Set the number of genereted fuzzed files.
--rn     _int   	Set the number of insert\overwrite.
--rp     _int   	Set the percentage of insert\overwrite.

Essential switch for insert fuzz:

--start  _int   	Data will be inserted from this position.
--end    _int   	Data will be inserted behind this position.

Essential switch for debug test:

--debug  _bool  	Start debug test.
--dir    _String	Set directory where the fuzzed files are located.
--prog   _String	Set the software to attack.
--timeout _int	Set time to wait before exit the application. (ms value, default 3500)

Generally examples:

Fuzz of the file "test.pdf" that overwrite random bytes with FF for 30 times generating 100 differents fuzzed files
jfuzz --file test.pdf --rofuzz FF --rn 30 --n 100

Fuzz of the file "test.pdf" that insert in random position FF for 30 times generating 100 differents fuzzed files
jfuzz --file test.pdf --rifuzz FF --rn 30 --n 100

Fuzz of the file "test.pdf" inserting FF from the 31st byte to the 42nd byte
jfuzz --file test.pdf --ifuzz FF --start 31 --end 42

Fuzz of the file "test.pdf" overwriting FF from the 31st byte to the 42nd byte
jfuzz --file test.pdf --ofuzz FF --start 31 --end 42

Replace the first 20 bytes of test.pdf with 00 value with FF
jfuzz --refuzz 00rFF --file test.pdf --rn 20

Test the application C:\reader.exe with the fuzzed files located on C:\pdfs\
jfuzz --debug --dir C:\pdfs\ --prog C:\reader.exe
This is the help.. Readme ftw!

Utility switch:

--print  _int   	Print file in HEX format with specified column number.
--size   _bool  	If set print the size of file.

Essential fuzzing switch:

--file   _String	Set the file you want to fuzz.
--rofuzz _String	Overwrite data at random position.
--rifuzz _String	Insert data at random position.
--ifuzz  _String	Insert data from "start" to "end" .
--ofuzz  _String	Overwrite data from "start" to "end".
--refuzz _String	Replace selected data with custom data.

Essential switch for random fuzz:

--n      _int   	Set the number of genereted fuzzed files.
--rn     _int   	Set the number of insert\overwrite.
--rp     _int   	Set the percentage of insert\overwrite.

Essential switch for insert fuzz:

--start  _int   	Data will be inserted from this position.
--end    _int   	Data will be inserted behind this position.

Essential switch for debug test:

--debug  _bool  	Start debug test.
--dir    _String	Set directory where the fuzzed files are located.
--prog   _String	Set the software to attack.
--timeout _int		Set time to wait before exit the application. (ms value, default 3500)

Generally examples:

Fuzz of the file "test.pdf" that overwrite random bytes with FF for 30 times generating 100 differents fuzzed files
jfuzz --file test.pdf --rofuzz FF --rn 30 --n 100

Fuzz of the file "test.pdf" that insert in random position FF for 30 times generating 100 differents fuzzed files
jfuzz --file test.pdf --rifuzz FF --rn 30 --n 100

Fuzz of the file "test.pdf" inserting FF from the 31st byte to the 42nd byte
jfuzz --file test.pdf --ifuzz FF --start 31 --end 42

Fuzz of the file "test.pdf" overwriting FF from the 31st byte to the 42nd byte
jfuzz --file test.pdf --ofuzz FF --start 31 --end 42

Replace the first 20 bytes of test.pdf with 00 value with FF
jfuzz --refuzz 00rFF --file test.pdf --rn 20

Test the application C:\reader.exe with the fuzzed files located on C:\pdfs\
jfuzz --debug --dir C:\pdfs\ --prog C:\reader.exe